{"version":3,"sources":["store/user-actions.js","components/AuthRoute.jsx","store/covid-actions.js","pages/index.jsx","pages/login-signup.jsx","api/user-account.js","api/loadCovidData.js","store/user-saga.js","store/covid-saga.js","store/user-slice.js","store/covid-slice.js","store/index.js","app/App.js","serviceWorker.js","index.js","firebase.config.js"],"names":["login","createAction","logout","setToken","setLoading","signup","AuthRouteActive","connect","ownProps","token","user","isLoggedIn","redirectTo","rest","to","setData","loadFromApi","render","num","toLocaleString","columns","dataIndex","title","key","fixed","sorter","a","b","state","defaultSortOrder","todayCases","responsive","todayActive","todayDeaths","todayRecovered","cases","active","deaths","recovered","Home","covid","dispatch","onRefresh","payload","onLogout","data","loading","history","useHistory","useEffect","handleRefresh","onLogoutFail","err","message","error","onLogoutSuccess","success","push","onFail","lastUpdated","updated","Date","tableData","states","total","toLocaleDateString","extra","size","onClick","icon","ReloadOutlined","disabled","data-cy","style","marginRight","onSuccess","type","LogoutOutlined","footer","textAlign","href","dataSource","pagination","rowKey","r","bordered","mapPropsToDispatch","onLogin","onSignup","LoginSignupActive","useState","username","setUsername","password","setPassword","handleLoginFail","handleLoginSuccess","handleSignupSuccess","handleSignupFail","className","bodyStyle","display","placeItems","maxWidth","minWidth","hoverable","onChange","value","target","addonBefore","marginBottom","Password","firebase","signInWithEmailAndPassword","then","currentUser","uid","signOut","createUserWithEmailAndPassword","loadCovidData","axios","get","accept","action","put","loginService","res","call","console","logoutService","signupService","watchForLogin","takeLatest","loginAction","toString","watchForLogout","logoutAction","watchForSignup","signupAction","userSaga","all","loadData","select","Error","watchForLoad","covidSaga","userSlice","createSlice","name","initialState","extraReducers","covidSlice","sagaMware","createSagaMiddleware","store","getStore","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","devTools","process","rootSaga","run","destroy","App","setup","setSetup","unscr","onAuthStateChanged","clearTimeout","tId","setTimeout","basename","exact","path","component","LoginSignupPage","HomePage","Boolean","window","location","hostname","match","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","setPersistence","Auth","Persistence","SESSION","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7cfc5232.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nexport const login = createAction(\"user/login\");\nexport const logout = createAction(\"user/logout\");\nexport const setToken = createAction(\"user/set-token\");\nexport const setLoading = createAction(\"user/set-loading\");\nexport const signup = createAction(\"user/signup\");\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst AuthRoute = ({ isLoggedIn, token, redirectTo, ...rest }) => {\n  if (isLoggedIn) {\n    return <Route {...rest} />;\n  }\n  return <Redirect to={redirectTo} />;\n};\n\nconst mapStateToProps = ({ user: { token } }, ownProps) => ({\n  ...ownProps,\n  isLoggedIn: !!token,\n  token,\n});\n\nconst AuthRouteActive = connect(mapStateToProps)(AuthRoute);\n\nexport default AuthRouteActive;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const setData = createAction(\"covid/set-data\");\nexport const setLoading = createAction(\"covid/set-loading\");\nexport const loadFromApi = createAction(\"covid/load-from-api\");\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { message, Button, Card, Table, Alert } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport { LogoutOutlined, ReloadOutlined } from \"@ant-design/icons\";\nimport { loadFromApi } from \"../store/covid-actions\";\nimport { logout } from \"../store/user-actions\";\n\nconst render = (num) => num.toLocaleString();\n\nconst columns = [\n  {\n    dataIndex: \"state\",\n    title: \"Particulars\",\n    key: \"state\",\n    fixed: \"left\",\n    sorter: (a, b) => a.state > b.state,\n    defaultSortOrder: \"ascend\",\n  },\n  {\n    dataIndex: \"todayCases\",\n    title: \"Total (today)\",\n    key: \"cases-today\",\n    sorter: (a, b) => a.todayCases - b.todayCases,\n    responsive: [\"lg\"],\n    render,\n  },\n  {\n    dataIndex: \"todayActive\",\n    title: \"Active (today)\",\n    key: \"active-today\",\n    sorter: (a, b) => a.todayActive - b.todayActive,\n    responsive: [\"lg\"],\n    render,\n  },\n  {\n    dataIndex: \"todayDeaths\",\n    title: \"Deaths (today)\",\n    key: \"death-today\",\n    sorter: (a, b) => a.todayDeaths - b.todayDeaths,\n    responsive: [\"lg\"],\n    render,\n  },\n  {\n    dataIndex: \"todayRecovered\",\n    title: \"Recovered (today)\",\n    key: \"recovered-today\",\n    sorter: (a, b) => a.todayRecovered - b.todayRecovered,\n    responsive: [\"lg\"],\n    render,\n  },\n  {\n    dataIndex: \"cases\",\n    title: \"Total\",\n    key: \"cases-till\",\n    sorter: (a, b) => a.cases - b.cases,\n    render,\n  },\n  {\n    dataIndex: \"active\",\n    title: \"Active\",\n    key: \"active-till\",\n    sorter: (a, b) => a.active - b.active,\n    responsive: [\"md\"],\n    render,\n  },\n  {\n    dataIndex: \"deaths\",\n    title: \"Deaths\",\n    key: \"death-till\",\n    sorter: (a, b) => a.deaths - b.deaths,\n    render,\n  },\n  {\n    dataIndex: \"recovered\",\n    title: \"Recovered\",\n    key: \"recovered-till\",\n    sorter: (a, b) => a.recovered - b.recovered,\n    render,\n  },\n];\n\nconst HomeView = ({ data = {}, loading = false, onRefresh, onLogout }) => {\n  const history = useHistory();\n  useEffect(() => {\n    handleRefresh();\n    //eslint-disable-next-line\n  }, []);\n\n  const onLogoutFail = (err) => {\n    message.error(err.message || \"Logout failed\");\n  };\n\n  const onLogoutSuccess = () => {\n    message.success(\"User logged out\");\n    history.push(\"/login-signup\");\n  };\n\n  const handleLogout = () => {\n    onLogout({\n      onFail: onLogoutFail,\n      onSuccess: onLogoutSuccess,\n    });\n  };\n\n  const handleRefresh = () => {\n    onRefresh({\n      onFail: (err) => {\n        message.error(err.message);\n      },\n    });\n  };\n\n  const lastUpdated = data?.updated ? new Date(data.updated) : \"\";\n  const title = () => (\n    <div>\n      <h2>Data for covid-19 cases in India</h2>\n      {lastUpdated && (\n        <h5>{`(last-updated on ${lastUpdated.toLocaleDateString()})`}</h5>\n      )}\n    </div>\n  );\n  const tableData =\n    data?.states && data?.total\n      ? [...data.states, { ...data.total, state: \"Total (all states)\" }]\n      : [];\n\n  return (\n    <Card\n      loading={loading}\n      title={title()}\n      extra={[\n        <Button\n          size=\"small\"\n          onClick={handleRefresh}\n          icon={<ReloadOutlined />}\n          disabled={loading}\n          data-cy=\"refresh\"\n          key=\"refresh\"\n          title=\"reload data\"\n          style={{ marginRight: \"10px\" }}\n        />,\n        <Button\n          size=\"small\"\n          data-cy=\"logout\"\n          onClick={handleLogout}\n          type=\"primary\"\n          loading={loading}\n          icon={<LogoutOutlined />}\n          key=\"logout\"\n          title=\"logout\"\n        />,\n      ]}\n    >\n      <Table\n        footer={() => (\n          <Alert\n            type=\"info\"\n            message={\n              <div style={{ textAlign: \"center\" }}>\n                Data-source:{\" \"}\n                <a href=\"https://disease.sh/v3/covid-19/gov/IN\">disease.sh</a>\n              </div>\n            }\n          />\n        )}\n        dataSource={tableData}\n        columns={columns}\n        pagination={false}\n        rowKey={(r) => r.state}\n        bordered\n      />\n    </Card>\n  );\n};\n\nHomeView.propTypes = {\n  data: PropTypes.object.isRequired,\n  loading: PropTypes.bool.isRequired,\n  onRefresh: PropTypes.func.isRequired,\n  onLogout: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ covid = {} }) => ({ ...covid });\nconst mapPropsToDispatch = (dispatch) => ({\n  onRefresh: (payload) => dispatch(loadFromApi(payload)),\n  onLogout: (payload) => dispatch(logout(payload)),\n});\n\nconst Home = connect(mapStateToProps, mapPropsToDispatch)(HomeView);\nexport default Home;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Input, Button, message } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login, signup } from \"../store/user-actions\";\n\nconst LoginSignup = ({ onLogin, loading, onSignup }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const history = useHistory();\n\n  const handleUsername = ({ target: { value } }) => {\n    setUsername(value);\n  };\n  const handlePassword = ({ target: { value } }) => {\n    setPassword(value);\n  };\n\n  const handleLoginFail = (err) => {\n    message.error(`Login failed: ${err.message}`);\n  };\n\n  const handleLoginSuccess = () => {\n    message.success(\"User logged in\");\n    history.push(\"/\");\n  };\n\n  const handleLogin = () => {\n    if (username && password) {\n      onLogin({\n        username,\n        password,\n        onFail: handleLoginFail,\n        onSuccess: handleLoginSuccess,\n      });\n    } else {\n      message.error(\"Login needs username and password\");\n    }\n  };\n\n  const handleSignupSuccess = () => {\n    message.success(\"User signed up. You may login!\");\n  };\n  const handleSignupFail = (err) => {\n    message.error(err.message || \"Signup failed\");\n  };\n\n  const handleSignup = () => {\n    if (!username || !password) {\n      message.error(\"Login needs username and password\");\n      return;\n    }\n    onSignup({\n      username,\n      password,\n      onSuccess: handleSignupSuccess,\n      onFail: handleSignupFail,\n    });\n  };\n\n  return (\n    <Card\n      className=\"login-section\"\n      title=\"Please login or signup\"\n      extra={[\n        <Button\n          onClick={handleSignup}\n          key=\"signup\"\n          data-cy=\"signup\"\n          disabled={loading}\n        >\n          Signup\n        </Button>,\n      ]}\n      bodyStyle={{\n        display: \"grid\",\n        placeItems: \"center\",\n      }}\n      style={{\n        maxWidth: \"50vw\",\n        minWidth: \"300px\",\n      }}\n      bordered\n      hoverable\n    >\n      <Input\n        data-cy=\"username\"\n        onChange={handleUsername}\n        addonBefore=\"Username\"\n        style={{ marginBottom: \"0.4rem\" }}\n      />\n      <Input.Password\n        data-cy=\"password\"\n        onChange={handlePassword}\n        addonBefore=\"Password\"\n        style={{ marginBottom: \"1.4rem\" }}\n      />\n      <Button\n        data-cy=\"login\"\n        type=\"primary\"\n        loading={loading}\n        onClick={handleLogin}\n      >\n        Login\n      </Button>\n    </Card>\n  );\n};\n\nLoginSignup.propTypes = {\n  onLogin: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  onSignup: PropTypes.func.isRequired,\n};\n\nconst mapPropsToDispatch = { onLogin: login, onSignup: signup };\nconst mapStateToProps = ({ user: { loading } }) => ({ loading });\n\nconst LoginSignupActive = connect(\n  mapStateToProps,\n  mapPropsToDispatch\n)(LoginSignup);\n\nexport default LoginSignupActive;\n","import * as firebase from \"firebase/app\";\n\nexport const login = (username, password) => {\n  return firebase\n    .auth()\n    .signInWithEmailAndPassword(username, password)\n    .then(() => ({ data: { token: firebase.auth().currentUser.uid } }));\n};\n\nexport const logout = () => {\n  return firebase.auth().signOut();\n};\n\nexport const signup = (username, password) => {\n  return firebase.auth().createUserWithEmailAndPassword(username, password);\n};\n","import axios from \"axios\";\n\nconst loadCovidData = () => {\n  return axios.get(\"https://disease.sh/v3/covid-19/gov/IN\", {\n    accept: \"application/json\",\n  });\n};\n\nexport default loadCovidData;\n","import { all, put, takeLatest, call } from \"redux-saga/effects\";\nimport {\n  login as loginAction,\n  logout as logoutAction,\n  signup as signupAction,\n  setToken,\n  setLoading,\n} from \"./user-actions\";\nimport {\n  login as loginService,\n  logout as logoutService,\n  signup as signupService,\n} from \"../api\";\n\nconst login = function* (action) {\n  try {\n    yield put(setLoading(true));\n    const {\n      payload: { username, password, onSuccess },\n    } = action;\n    const res = yield loginService(username, password);\n    yield put(setToken(res.data.token));\n    yield call(onSuccess, res);\n  } catch (err) {\n    console.error(`Sign-up error: ${err.message}`);\n    yield call(action.payload.onFail, err);\n  } finally {\n    yield put(setLoading(false));\n  }\n};\n\nconst logout = function* (action) {\n  try {\n    yield put(setLoading(true));\n    yield call(logoutService);\n    yield put(setToken(\"\"));\n    yield call(action.payload.onSuccess);\n  } catch (err) {\n    console.error(`Logout error: ${err.message}`);\n    yield call(action.payload.onFail);\n  } finally {\n    yield put(setLoading(false));\n  }\n};\n\nconst signup = function* (action) {\n  try {\n    yield put(setLoading(true));\n    const {\n      payload: { username, password, onSuccess },\n    } = action;\n    yield signupService(username, password); //no-verify-email\n    yield call(onSuccess);\n  } catch (err) {\n    console.error(`Login-error: ${err.message}`);\n    yield call(action.payload.onFail, err);\n  } finally {\n    yield put(setLoading(false));\n  }\n};\n\nconst watchForLogin = function* () {\n  yield takeLatest(loginAction.toString(), login);\n};\n\nconst watchForLogout = function* () {\n  yield takeLatest(logoutAction.toString(), logout);\n};\n\nconst watchForSignup = function* () {\n  yield takeLatest(signupAction.toString(), signup);\n};\n\nconst userSaga = function* () {\n  yield all([watchForLogin(), watchForLogout(), watchForSignup()]);\n};\n\nexport default userSaga;\n","import { put, takeLatest, call, select } from \"redux-saga/effects\";\nimport { loadFromApi, setLoading, setData } from \"./covid-actions\";\nimport { loadCovidData } from \"../api\";\n\nconst loadData = function* (action) {\n  try {\n    const token = yield select(({ user }) => user.token);\n    if (!token) {\n      throw new Error(\"User not authenticated!\");\n    }\n    yield put(setLoading(true));\n    const res = yield loadCovidData();\n    yield put(setData(res.data));\n  } catch (err) {\n    console.error(`Data-fetching-error: ${err.message}`);\n    if (action.payload?.onFail) {\n      yield call(action.payload.onFail, err);\n    }\n  } finally {\n    yield put(setLoading(false));\n  }\n};\n\nconst watchForLoad = function* (...args) {\n  yield takeLatest(loadFromApi.toString(), loadData);\n};\n\nconst covidSaga = function* () {\n  yield watchForLoad();\n};\n\nexport default covidSaga;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { setToken, setLoading } from \"./user-actions\";\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    token: null,\n    loading: false,\n  },\n  extraReducers: {\n    [setToken]: (state, action) => {\n      state.token = action.payload;\n      return state;\n    },\n    [setLoading]: (state, action) => {\n      state.loading = action.payload;\n      return state;\n    },\n  },\n});\n\nexport default userSlice;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { setData, setLoading } from \"./covid-actions\";\n\nconst covidSlice = createSlice({\n  name: \"covid\",\n  initialState: {\n    data: {},\n    loading: false,\n  },\n  extraReducers: {\n    [setData]: (state, action) => {\n      state.data = action.payload;\n      return state;\n    },\n    [setLoading]: (state, action) => {\n      state.loading = action.payload;\n      return state;\n    },\n  },\n});\n\nexport default covidSlice;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { all } from \"redux-saga/effects\";\nimport { loadFromApi } from \"./covid-actions\";\nimport { login, logout, signup } from \"./user-actions\";\nimport userSaga from \"./user-saga\";\nimport covidSaga from \"./covid-saga\";\nimport userSlice from \"./user-slice\";\nimport covidSlice from \"./covid-slice\";\n\nconst sagaMware = createSagaMiddleware();\n\nlet store = null;\n\nconst getStore = () => {\n  if (store) {\n    return store;\n  }\n  store = configureStore({\n    reducer: { user: userSlice.reducer, covid: covidSlice.reducer },\n    middleware: [\n      ...getDefaultMiddleware({\n        serializableCheck: {\n          // Ignore these action types\n          ignoredActions: [\n            loadFromApi.toString(),\n            login.toString(),\n            logout.toString(),\n            signup.toString(),\n          ],\n        },\n      }),\n      sagaMware,\n    ],\n    devTools: process.env.NODE_ENV !== \"production\",\n  });\n\n  const rootSaga = function* () {\n    yield all([userSaga(), covidSaga()]);\n  };\n\n  sagaMware.run(rootSaga);\n\n  store.destroy = () => {\n    store = null;\n  };\n\n  return store;\n};\n\nexport default getStore;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { Spin } from \"antd\";\nimport * as firebase from \"firebase/app\";\nimport { setToken } from \"../store/user-actions\";\nimport { AuthRoute } from \"../components\";\nimport HomePage from \"../pages\";\nimport LoginSignupPage from \"../pages/login-signup\";\nimport getStore from \"../store\";\nimport \"./App.css\";\n\nconst store = getStore();\n\nfunction App() {\n  const [setup, setSetup] = useState(true);\n\n  useEffect(() => {\n    const unscr = firebase.auth().onAuthStateChanged((user) => {\n      store.dispatch(setToken(user?.uid ?? null));\n      clearTimeout(tId);\n      unscr();\n      setSetup(false);\n    });\n\n    let tId = setTimeout(() => {\n      setSetup(false);\n      unscr();\n    }, 5000);\n    //eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      store.destroy();\n    };\n    //eslint-disable-next-line\n  }, []);\n\n  if (setup) {\n    return (\n      <div className=\"app\">\n        <Spin />\n      </div>\n    );\n  }\n\n  return (\n    <Router basename=\"/covid19\">\n      <Provider store={store}>\n        <div className=\"app\">\n          <Switch>\n            <Route exact path=\"/login-signup\" component={LoginSignupPage} />\n            <AuthRoute\n              exact\n              redirectTo=\"/login-signup\"\n              path=\"/\"\n              component={HomePage}\n            />\n            <Redirect to=\"/\" />\n          </Switch>\n        </div>\n      </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport * as firebase from \"firebase/app\";\nimport { firebaseConfig } from \"./firebase.config\";\nimport \"firebase/auth\";\n\nimport \"./index.css\";\nimport \"antd/dist/antd.css\";\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const firebaseConfig = {\n  apiKey: \"AIzaSyBrr5dysZ0APQxOniuBjeI_q9sesqHi7oU\",\n  authDomain: \"covid19-efda1.firebaseapp.com\",\n  databaseURL: \"https://covid19-efda1.firebaseio.com\",\n  projectId: \"covid19-efda1\",\n  storageBucket: \"covid19-efda1.appspot.com\",\n  messagingSenderId: \"386904710490\",\n  appId: \"1:386904710490:web:44e36f06f3ad642f75e763\",\n};\n"],"sourceRoot":""}